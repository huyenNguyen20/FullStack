{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishDetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/feedbacks.js","redux/forms.js","App.js","redux/configureStore.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","console","log","id","key","to","width","src","image","alt","name","Menu","props","menu","dishes","map","onClick","isLoading","errMess","active","RenderDish","in","transformProps","exitTransform","top","description","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","rating","required","val","length","maxLength","len","minLength","color","isOpen","toggle","onSubmit","htmlFor","select","model","placeholder","validators","selected","value","show","messages","text","textarea","rows","type","Component","DishDetail","Header","toggleNav","isNavOpen","handleLogin","event","alert","username","password","remember","checked","preventDefault","dark","expand","href","height","navbar","outline","innerRef","input","check","Footer","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","isNumber","isNaN","Number","validEmail","test","Contact","handleInputChange","target","JSON","stringify","resetFeedbackForm","postFeedback","firstback","lastname","telnum","email","agree","contactType","message","feedback","role","md","size","offset","checkbox","RenderLeader","leaders","list","tag","left","object","body","heading","About","title","promosLoading","dishesFailed","errmess","payload","promosFailed","commentsFailed","addDishes","addComments","addIndividualComment","addPromos","promos","leadersFailed","addLeaders","addFeedback","addFeedbacks","feedbacks","Main","selectedDish","fetchDishes","fetchComments","fetchPromos","fetchLeaders","fetchFeedbacks","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","addComment","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","err","newComment","toISOString","method","headers","credentials","firstname","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","Feedbacks","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.351dc358.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse \r\n            fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading ...</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl = 'http://localhost:3001/';","import React from \"react\";\r\nimport {Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Loading} from \"./LoadingComponent\";\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem ({dish}){\r\n    console.log(\"In RenderMenu Item: \" + dish.id)\r\n    return (\r\n        <Card key={dish.id}>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map(dish => {\r\n        \r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n            </div>\r\n        );\r\n    });\r\n    if(props.dishes.isLoading){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.dishes.errMess){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <div className = \"container\">\r\n                <div className = \"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            Menu\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n   \r\n\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from \"react\";\r\nimport {Card, CardImg, CardText, CardBody,\r\n    CardTitle,  Media, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalBody, ModalHeader, \r\n    Row, Label} from \"reactstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Control, LocalForm, Errors} from \"react-redux-form\";\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction  RenderDish({dish}) {\r\n    return (\r\n        <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n        \r\n    );\r\n}\r\n\r\nfunction  RenderComments({comments, postComment, dishId}){\r\n        \r\n    if(comments){\r\n        return (\r\n            <div >\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                    </Stagger>\r\n                </ul>\r\n                    \r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <div >\r\n                <h4>Comments</h4>\r\n                <p>No Comment is Available</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleSubmit(values){\r\n        //e.preventDefault();\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }   \r\n    render() {\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n        return(\r\n            <div>\r\n                <Button color=\"primary\" onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-info fa-lg\"></span>\r\n                    Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>\r\n                    Submit Comment\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group ml-2 mr-2\">\r\n                            <Label htmlFor=\"username\">\r\n                                Rating\r\n                            </Label>\r\n                        \r\n                            <Control.select \r\n                                model=\".rating\" \r\n                                name=\"rating\" \r\n                                id=\"rating\"\r\n                                className=\"form-control custom-select\"\r\n                                placeholder=\"Select Rating\"\r\n                                validators={{\r\n                                    required\r\n                                }}\r\n                            >       \r\n                                    <option selected>Open this select menu</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                            </Control.select>\r\n                            \r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".rating\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: \"Required\"\r\n                                }}\r\n                            />\r\n                        </Row>\r\n                        <Row className=\"form-group ml-2 mr-2\">\r\n                            <Label htmlFor=\"password\">\r\n                                Your Name\r\n                            </Label>\r\n                            <Control.text\r\n                                model=\".name\"\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Your Name\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required,\r\n                                    minLength: minLength(3),\r\n                                    maxLength: maxLength(15)\r\n                                }}\r\n                            />\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".name\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: \"Required\",\r\n                                    minLength: \"Must be greater than 2 characters\",\r\n                                    maxLength: \"Must be 15 characters or less\"\r\n                                }}\r\n                            />\r\n                        </Row>\r\n                        <Row className=\"form-group ml-2 mr-2\">\r\n                            <Label htmlFor=\"comment\">\r\n                                Comment\r\n                            </Label>\r\n                            <Control.textarea\r\n                                model=\".comment\" \r\n                                name=\"comment\" \r\n                                id=\"comment\" \r\n                                rows=\"6\"\r\n                                placeholder=\"Your comment goes here\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required,\r\n                                    minLength: minLength(5),\r\n                                    maxLength: maxLength(150)\r\n                                }}\r\n                            />\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".comment\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: \"Required\",\r\n                                    minLength: \"Must be greater than 5 characters\",\r\n                                    maxLength: \"Must be 150 characters or less\"\r\n                                }}\r\n                            />\r\n                        </Row>\r\n                        <Row className=\"form-group ml-2 mr-2\">\r\n                            <Button \r\n                                type=\"submit\"\r\n                                value=\"submit\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction DishDetail (props){\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.dish != null)\r\n        return(\r\n            <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/menu\">Menu</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>\r\n                                {props.dish.name}\r\n                            </BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderComments comments={props.comments} \r\n                                        postComment={props.postComment}\r\n                                        dishId={props.dish.id}/>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            \r\n        );\r\n    else\r\n        return(\r\n            <div></div>\r\n        );\r\n}\r\n    \r\n\r\nexport default DishDetail;","import React, {Component} from \"react\";\r\nimport {Nav, Navbar, NavbarBrand, NavbarToggler, \r\n    Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, \r\n    ModalBody, Form, FormGroup, Input, Label} from \"reactstrap\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super (props);\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav () {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal () {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(`Username: ${this.username.value} Password: ${this.password.value} \r\n        Remember: ${this.remember.checked}`);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\"\r\n                            height=\"30\" width=\"40\" \r\n                            alt=\"Ristorante Con Fusion\"/>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar >\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"\r\n                                            to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span>\r\n                                        Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"\r\n                                            to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span>\r\n                                        About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"\r\n                                            to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span>\r\n                                        Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"\r\n                                            to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span>\r\n                                        Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>\r\n                                    We take inspiration from the World's best cuisines, \r\n                                    and create a unique fusion experience. \r\n                                    Our lipsmacking creations will tickle your culinary senses!\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Login\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">\r\n                                    Username\r\n                                </Label>\r\n                                <Input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                name=\"username\"\r\n                                innerRef={input => this.username=input}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">\r\n                                    Password\r\n                                </Label>\r\n                                <Input\r\n                                type=\"text\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                innerRef={input => this.password=input}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input \r\n                                    type=\"checkbox\"\r\n                                    name=\"remember\"\r\n                                    innerRef={input => this.remember=input}\r\n                                    />\r\n                                    Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button \r\n                            type=\"submit\"\r\n                            value=\"submit\"\r\n                            color=\"primary\"\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n                      <i className=\"fa fa-phone fa-lg\"></i> +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i> +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i> <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { Card, CardImg, CardText, CardBody, \r\n        CardTitle, CardSubtitle } from \"reactstrap\";\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}){\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                     <Card>\r\n                        <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                        <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                        <CardText>{item.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n            </FadeTransform>\r\n           \r\n        );\r\n\r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-item-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard \r\n                    item={props.dish} \r\n                    isLoading={props.dishesLoading} \r\n                    errMess={props.dishesErrMess}  \r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard \r\n                    item={props.promotion} \r\n                    isLoading={props.promoLoading} \r\n                    errMess={props.promoErrMess} \r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard \r\n                    item={props.leader} \r\n                    isLoading={props.leadersLoading} \r\n                    errMess={props.leadersErrMess} \r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>    \r\n        );\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, \r\n    Button, Row, Col, Label} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Control, Form, Errors, actions} from \"react-redux-form\";\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(Number(val));\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit (values) {\r\n        console.log(`Current State is ${JSON.stringify(values)}`);\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values.firstback, values.lastname, values.telnum, values.email\r\n            ,values.agree, values.contactType, values.message);\r\n        alert(`Thank you for your feedback ! \r\n                ${JSON.stringify(this.props.feedback)}`);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            Contact Us\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={values => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>\r\n                                    First Name\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                    model=\".firstname\"\r\n                                    id=\"firstname\" \r\n                                    name=\"firstname\"\r\n                                    placeholder=\"First name\"\r\n                                    className=\"form-control\"\r\n                                    validators={\r\n                                        {\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }\r\n                                    }\r\n                                    />\r\n                                    <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: \"Required\",\r\n                                        minLength: \"Must be greater than 2 characters\",\r\n                                        maxLength: \"Must be 15 characters or less\"\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>\r\n                                    Last Name\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                    model=\".lastname\" \r\n                                    id=\"lastname\" \r\n                                    name=\"lastname\"\r\n                                    placeholder=\"Last name\" \r\n                                    className=\"form-control\"\r\n                                    validators={\r\n                                        {\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }\r\n                                    }\r\n                                    />\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: \"Required\",\r\n                                        minLength: \"Must be greater than 2 characters\",\r\n                                        maxLength: \"Must be 15 characters or less\"\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>\r\n                                    Contact Tel\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                    model=\".telnum\" \r\n                                    id=\"telnum\" \r\n                                    name=\"telnum\"\r\n                                    placeholder=\"Telephone Number\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required,\r\n                                        minLength: minLength(3),\r\n                                        maxLength: maxLength(15),\r\n                                        isNumber\r\n                                    }}\r\n                                    />\r\n                                    <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: \"Required\",\r\n                                        minLength: \"Must be greater than 2 numbers\",\r\n                                        maxLength: \"Must be greater than 15 characters or less\",\r\n                                        isNumber: \"Must be a number\"\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>\r\n                                   Email\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                    model=\".email\" \r\n                                    id=\"email\" \r\n                                    name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required,\r\n                                        validEmail\r\n                                    }}\r\n                                    />\r\n                                    <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: \"Required\",\r\n                                        validEmail: \"Invalid Email Address\"\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                            model=\".agree\"\r\n                                            name=\"agree\"\r\n                                            className=\"form-check-input\"\r\n                                            />\r\n                                            {' '}\r\n                                            <strong>May we contact you</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select\r\n                                    model=\".contactType\" \r\n                                    type=\"select\"\r\n                                    name=\"contactType\"\r\n                                    className=\"form-control\"\r\n                                    >\r\n                                        <option>Tel</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>\r\n                                   Your Feedback\r\n                                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea\r\n                                    model=\".message\" \r\n                                    id=\"message\" \r\n                                    name=\"message\"\r\n                                    rows=\"12\"\r\n                                    className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 1}}>\r\n                                    <Button type=\"submit\"\r\n                                    color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {baseUrl} from \"../shared/baseUrl\";\r\nimport {Loading} from \"./LoadingComponent\";\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\nfunction RenderLeader (props){\r\n    if(props.isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.leaders != null){\r\n        return (\r\n            <Media list>\r\n            <Stagger in>\r\n            {props.leaders.map((leader) => {\r\n                    return (\r\n                        <Fade in>\r\n                            <div key={leader.id}>\r\n                            \r\n                                <Media tag=\"li\">\r\n                                    <Media left top className=\"mt-2\" >\r\n                                    \r\n                                        <Media object src={baseUrl + leader.image} alt={leader.name}/>\r\n                                    \r\n                                        </Media>\r\n                                        <Media body className=\"ml-5\">\r\n                                            <Media heading>\r\n                                                {leader.name}\r\n                                            </Media>\r\n                                            <p>{leader.designation}</p>\r\n                                            <p>{leader.description}</p>\r\n                                    </Media>\r\n                                </Media>\r\n                        \r\n                            </div>\r\n                        </Fade>\r\n                    );\r\n                })}\r\n            </Stagger>\r\n            </Media>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction About(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    < RenderLeader \r\n                    isLoading={props.leaders.isLoading} \r\n                    errMess={props.leaders.errMess} \r\n                    leaders={props.leaders.leaders} \r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n})\r\n\r\nexport const fetchDishes = () => dispatch => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch (baseUrl + \"dishes\")\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes =>  dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const fetchPromos = () => dispatch => {\r\n    dispatch(promosLoading());\r\n\r\n    return fetch (baseUrl + \"promotions\")\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos =>  dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n  const newComment = {\r\n      dishId: dishId,\r\n      rating: rating,\r\n      author: author,\r\n      comment: comment\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'comments', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newComment),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addIndividualComment(response)))\r\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n})\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n})\r\n\r\nexport const dishesFailed = errmess => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const promosFailed = errmess => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const commentsFailed = errmess => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addDishes = dishes => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const addComments = comments => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const addIndividualComment = comment => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading());\r\n  return fetch(baseUrl + \"leaders\")\r\n  .then(response => {\r\n    if(response.ok){\r\n      return response;\r\n    } else {\r\n      var err = new Error(\"Error: \" +  response.status + \" with \" + response.statusText);\r\n      err.response = response;\r\n      throw err;\r\n    }\r\n  }, errMess => {\r\n    var errMess = new Error(errMess.message);\r\n    throw errMess;\r\n  })\r\n  .then(response => response.json() )\r\n  .then(leaders => {\r\n    dispatch(addLeaders(leaders));\r\n  })\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n})\r\n\r\nexport const leadersFailed = (errMess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errMess\r\n})\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n})\r\n\r\nexport const postFeedback = (firstname, lastname, \r\n  telnum, email, agree, \r\n  contactType, message) => (dispatch) => {\r\n    const newFeedback = {\r\n      firstname: firstname, \r\n      lastname: lastname, \r\n      telnum: telnum, \r\n      email: email, \r\n      agree: agree, \r\n      contactType: contactType,\r\n      message: message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n    return fetch(baseUrl + \"feedback\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n      if(response.ok) {\r\n        return response;\r\n      } else {\r\n        var err = new Error(`Error: ${response.status} with ${response.statusText}`);\r\n        err.response = response;\r\n        throw err;\r\n      }\r\n    }, err => {\r\n      var err = new Error(err.message);\r\n      throw err ;\r\n    })\r\n    .then(response => response.json())\r\n    .then(feedback => dispatch(addFeedback(feedback)))\r\n    .catch(error => {\r\n      console.log(error.message);\r\n      alert(\"Your feedback couldn't posted \\n Error: \" + error.message);\r\n    }) \r\n}\r\n\r\nexport const addFeedback = (feedback) => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedback\r\n})\r\n\r\nexport const fetchFeedbacks = () => (dispatch) => {    \r\n  return fetch(baseUrl + 'feedback')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(feedbacks => dispatch(addFeedbacks(feedbacks)))\r\n  .catch(error => console.log(error.message));\r\n};\r\n\r\nexport const addFeedbacks = (feedbacks) => ({\r\n  type: ActionTypes.ADD_FEEDBACKS,\r\n  payload: feedbacks\r\n})","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED =  \"DISHES_FAILED\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\r\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\r\nexport const ADD_PROMOS = \"ADD_PROMOS\";\r\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const ADD_FEEDBACK = \"ADD_FEEDBACK\";\r\nexport const ADD_FEEDBACKS = \"ADD_FEEDBACKS\";","import React, {Component} from \"react\";\r\nimport Menu from \"./MenuComponent\";\r\nimport DishDetail from \"./DishDetailComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport Contact  from \"./ContactComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport {Switch, Route, Redirect, withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport { postComment, fetchDishes, fetchComments, \r\n    fetchPromos, fetchLeaders, fetchFeedbacks, postFeedback} from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders,\r\n        feedbacks: state.feedbacks\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchDishes: () => {dispatch(fetchDishes())},\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n    fetchFeedbacks: () => dispatch(fetchFeedbacks()),\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    postFeedback: (firstname, lastname, \r\n                    telnum, email, agree, \r\n                    contactType, message) => dispatch(postFeedback(firstname, lastname, \r\n                                            telnum, email, agree, \r\n                                            contactType, message))\r\n})\r\n\r\nclass Main extends Component {\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            selectedDish: null\r\n        }\r\n    }\r\n\r\n    onDishSelect(dishId){\r\n        this.setState({selectedDish: dishId});\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n        this.props.fetchFeedbacks();\r\n    }\r\n\r\n    render(){\r\n        const HomePage = () => {\r\n            return (\r\n                <Home \r\n                dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                dishesLoading={this.props.dishes.isLoading}\r\n                dishesErrMess={this.props.dishes.errMess}\r\n                promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                promoLoading={this.props.promotions.isLoading}\r\n                promoErrMess={this.props.promotions.errMess}\r\n                leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                leadersLoading={this.props.leaders.isLoading}\r\n                leadersErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n        const DishWithId = ({match}) => {\r\n         \r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id \r\n                    === parseInt(match.params.dishId, 10))[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    addComment={this.props.addComment}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        }\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                    <TransitionGroup>\r\n                        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch location={this.props.location}>\r\n                            <Route path='/home' component={HomePage} />\r\n                            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />} />\r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}  \r\n                                                                            postFeedback={this.props.postFeedback}\r\n                                                                            feedback={this.props.feedbacks.feedbacks[this.props.feedbacks.feedbacks.length - 1]}/>} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                        </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from \"./ActionTypes\";   \r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errMess: null,\r\n                dishes: action.payload\r\n            };\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                errMess: null,\r\n                dishes: []\r\n            };\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errMess: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state={\r\n    errMess: null,\r\n    isLoading: true,\r\n    leaders: []\r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {\r\n                ...state,\r\n                errMess: action.payload,\r\n                isLoading: false,\r\n            };\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {\r\n                ...state,\r\n                errMess: null,\r\n                isLoading: true,\r\n                leaders: []\r\n            };\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {\r\n                ...state,\r\n                errMess: null,\r\n                isLoading: false,\r\n                leaders: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from \"./ActionTypes\";   \r\n\r\nexport const Feedbacks = (state = {feedbacks: []}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_FEEDBACK:\r\n            var feedback = action.payload;\r\n            feedback.id = state.feedbacks.length;\r\n            return {\r\n                feedbacks: state.feedbacks.concat(feedback)\r\n            };\r\n        case ActionTypes.ADD_FEEDBACKS:\r\n            return {\r\n                feedbacks: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, {Component} from 'react';\r\nimport Main from \"./components/MainComponent\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport {Provider} from \"react-redux\";\r\nimport {ConfigureStore} from \"./redux/configureStore\";\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component{\r\n   \r\n    render () {\r\n        return (\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <div className=\"App\">\r\n                        <Main />\r\n                    </div>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport {Dishes} from \"./dishes\";\r\nimport {Comments} from \"./comments\";\r\nimport {Promotions} from \"./promotions\";\r\nimport {Leaders} from \"./leaders\";\r\nimport {Feedbacks} from \"./feedbacks\";\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            feedbacks: Feedbacks,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}